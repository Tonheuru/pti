//      

                                                          
                                                                     

const fs = require('fs')
const debug = require('debug')('textrun:configuration')
const YAML = require('yamljs')

const defaultValues = {
  fast: false,
  files: '**/*.md',
  format: 'detailed',
  useSystemTempDirectory: false,
  classPrefix: 'textrun',
  activityTypes: {
    runConsoleCommand: {
      globals: {}
    }
  }
}

// Encapsulates logic around the configuration
class Configuration {
                        
                              
                               
                   
                 

  constructor (configFilePath        , constructorArgs             ) {
    this.configFilePath = configFilePath
    this.constructorArgs = constructorArgs || {}

    if (this.configFilePath) {
      debug(`loading configuration file: ${this.configFilePath}`)
      // $FlowFixMe: flow-type defs seems to be wrong here
      this.fileData = YAML.load(configFilePath) || {}
    } else {
      this.fileData = {}
    }
    debug(`configuration file data: ${JSON.stringify(this.fileData)}`)

    // the directory containing the source code
    this.sourceDir = process.cwd()
  }

  // Returns the value of the attribute with the given name
  get (attributeName        )         {
    return (
      this.constructorArgs[attributeName] ||
      this.fileData[attributeName] ||
      defaultValues[attributeName]
    )
  }

  // Creates a config file with default values
  createDefault () {
    fs.writeFileSync(
      './text-run.yml',
      `# white-list for files to test
# This is a glob expression, see https://github.com/isaacs/node-glob#glob-primer
# The folder "node_modules" is already excluded.
# To exclude the "vendor" folder: '{,!(vendor)/**/}*.md'
files: '**/*.md'

# the formatter to use
format: detailed

# prefix that makes anchor tags active regions
classPrefix: 'textrun'

# whether to run the tests in an external temp directory,
# uses ./tmp if false,
# you can also provide a custom directory path here
useSystemTempDirectory: false

# activity-type specific configuration
activityTypes:
  runConsoleCommand:
    globals: {}`
    )
  }
}

module.exports = Configuration
