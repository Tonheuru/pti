// Generated by LiveScript 1.5.0
var ref$, green, grey, red, reset, diff, renderDifferences, getColor;
ref$ = require('chalk'), green = ref$.green, grey = ref$.grey, red = ref$.red, reset = ref$.reset;
diff = require('diff');
renderDifferences = function(differences){
  var part;
  return (function(){
    var i$, ref$, len$, results$ = [];
    for (i$ = 0, len$ = (ref$ = differences).length; i$ < len$; ++i$) {
      part = ref$[i$];
      results$.push(getColor(part)(part.value));
    }
    return results$;
  }()).join('');
};
getColor = function(part){
  switch (false) {
  case !part.added:
    return green;
  case !part.removed:
    return red;
  default:
    return grey;
  }
};
module.exports = function(actual, expected, done){
  var differences, error;
  switch (false) {
  case !!actual:
    throw new Error("JsDiffConsole: actual value not provided");
  case !!expected:
    throw new Error("JsDiffConsole: expected value not provided");
  }
  differences = diff.diffJson(expected, actual);
  if (differences.length === 1) {
    return typeof done == 'function' ? done() : void 8;
  } else {
    error = new Error("mismatching records:\n\n" + renderDifferences(differences));
    if (done) {
      return done(error);
    } else {
      throw new Error(error);
    }
  }
};